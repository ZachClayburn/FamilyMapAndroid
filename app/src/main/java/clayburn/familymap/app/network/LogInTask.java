package clayburn.familymap.app.network;

import android.os.AsyncTask;

import clayburn.familymap.ServiceRequests.LoginRequest;
import clayburn.familymap.ServiceResponses.ServiceResponse;

/**
 * Created by zachc_000 on 3/21/2018.
 */

public class LogInTask extends AsyncTask<LoginRegisterParams,Void,ServiceResponse> {

    /**
     * An interface that must be implemented by any class that is going to create a LogInTask
     */
    public interface LoginCaller {

        /**
         * This method will be called by the LogInTask on the object that created it when the
         * transaction with the server is complete. The response will be the response from the
         * server, or an error generated by the LogInTask itself.
         * @param response Either a LoginResponse from the server containing an authorization token,
         *                or an ErrorResponse containing an error message.
         */
        public void onLogInComplete(ServiceResponse response);
    }

    private LoginCaller mCaller;

    /**
     * Creates a new LogInTask to log into the server
     * @param caller A reference to the object that is creating the LogInTask. It will use this to
     *              call functions to update the caller
     */
    public LogInTask(LoginCaller caller){
        mCaller = caller;
    }

    @Override
    protected ServiceResponse doInBackground(LoginRegisterParams... loginRegisterParams) {

        LoginRegisterParams params = loginRegisterParams[0];

        String serverHost = params.getServerHost();
        int serverPort = params.getServerPort();
        String userName = params.getUserName();
        String password = params.getPassword();

        Proxy proxy = new Proxy(serverHost,serverPort);
        LoginRequest request = new LoginRequest(userName,password);

        return proxy.login(request);
    }

    @Override
    protected void onPostExecute(ServiceResponse response) {
        mCaller.onLogInComplete(response);
    }
}
