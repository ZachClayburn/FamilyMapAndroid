package clayburn.familymap.app.network;

import android.os.AsyncTask;

import clayburn.familymap.ServiceResponses.ServiceResponse;

/**
 * Created by zach on 3/22/18.
 */

public class DataFetchTask extends AsyncTask<String,ServiceResponse,ServiceResponse>{

    /**
     * An interface that must be implemented by any class that is going to create a DataFetchTask
     */
    public interface DataFetchCaller {

        /**
         * This method will be called by the DataFetchTask on the object that created it when the
         * transaction with the server is complete. The response will be the response from the
         * server, or an error generated by the DataFetchTask itself.
         * @param response Either a DataFetchResponse from the server containing an authorization token,
         *                or an ErrorResponse containing an error message.
         */
        void onPersonFetchComplete(ServiceResponse response);

        void onEventFetchComplete(ServiceResponse response);
    }

    private DataFetchCaller mCaller;

    /**
     * Creates a new DataFetchTask to log into the server
     * @param caller A reference to the object that is creating the DataFetchTask. It will use this to
     *              call functions to update the caller
     */
    public DataFetchTask(DataFetchTask.DataFetchCaller caller){
        mCaller = caller;
    }


    @Override
    protected ServiceResponse doInBackground(String... strings) {

        

        return null;
    }

    @Override
    protected void onProgressUpdate(ServiceResponse... values) {
        mCaller.onEventFetchComplete(values[0]);
    }

    @Override
    protected void onPostExecute(ServiceResponse serviceResponse) {
        mCaller.onPersonFetchComplete(serviceResponse);
    }
}
